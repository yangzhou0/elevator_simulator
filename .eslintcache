[{"/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/index.js":"1","/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/App.js":"2","/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/reportWebVitals.js":"3","/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/helper/utilityFunctions.js":"4"},{"size":500,"mtime":1611074345691,"results":"5","hashOfConfig":"6"},{"size":2522,"mtime":1611088315066,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611074345693,"results":"8","hashOfConfig":"6"},{"size":1005,"mtime":1611086190490,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"10gaph0",{"filePath":"13","messages":"14","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/index.js",[],["20","21"],"/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/App.js",["22","23","24","25"],"/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/reportWebVitals.js",[],"/Users/yangzhou/Desktop/codePlatoonExercises/elevator_simulator/src/helper/utilityFunctions.js",["26","27","28"],"function getRandomIntInclusive(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1) + min); //The maximum is inclusive and the minimum is inclusive\n}\n\nconst addFloor = (currentFloor,floorsToGo,selectedFloor,setFloorsToGo)=>{\n  if (currentFloor == selectedFloor){\n    alert(`You are already at floor ${currentFloor}`)\n  }\n  else if (!floorsToGo.includes(selectedFloor)){\n    floorsToGo.push(selectedFloor)\n    setFloorsToGo(floorsToGo)\n  }\n}\n\nconst isGoingUp = (currentFloor,floorsToGo)=>{\n  if (floorsToGo[0] > currentFloor){\n    return true\n  }else if (floorsToGo[0] < currentFloor){\n    return false\n  }\n}\n\nconst checkFloorStatus = (currentFloor,floorsToGo,setFloorsToGo)=>{\n  if (floorsToGo.includes(currentFloor)){\n    setFloorsToGo(floorsToGo.filter(ele=>ele!=currentFloor))\n    return 'arrived'\n  }\n  else if (floorsToGo.length == 0){\n    return 'stop'\n  }\n}\n\nexport {\n  getRandomIntInclusive,\n  addFloor,\n  isGoingUp,\n  checkFloorStatus\n}",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"38","line":26,"column":40,"nodeType":"39","messageId":"40","endLine":26,"endColumn":42},{"ruleId":"41","severity":1,"message":"42","line":35,"column":7,"nodeType":"43","messageId":"44","endLine":48,"endColumn":8},{"ruleId":"33","severity":1,"message":"45","line":38,"column":15,"nodeType":"35","messageId":"36","endLine":38,"endColumn":24},{"ruleId":"37","severity":1,"message":"46","line":8,"column":20,"nodeType":"39","messageId":"40","endLine":8,"endColumn":22},{"ruleId":"37","severity":1,"message":"38","line":27,"column":45,"nodeType":"39","messageId":"40","endLine":27,"endColumn":47},{"ruleId":"37","severity":1,"message":"46","line":30,"column":30,"nodeType":"39","messageId":"40","endLine":30,"endColumn":32},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'userInput' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]